name: Deploy Backend and Frontend to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          Backend/package-lock.json
          Frontend2/package-lock.json

    - name: Install backend dependencies
      run: |
        cd Backend
        npm ci

    - name: Install frontend dependencies
      run: |
        cd frontend2
        npm ci

    - name: Build frontend
      run: |
        cd frontend2
        npm run build

    - name: Prepare backend for deployment
      run: |
        # Copy frontend build to backend public folder
        mkdir -p Backend/public
        cp -r frontend2/dist/* Backend/public/
        
        # Create web.config for Azure App Service (Node.js)
        cat > Backend/web.config << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <configuration>
          <system.webServer>
            <handlers>
              <add name="iisnode" path="index.js" verb="*" modules="iisnode"/>
            </handlers>
            <rewrite>
              <rules>
                <rule name="StaticContent">
                  <action type="Rewrite" url="public{REQUEST_URI}"/>
                </rule>
                <rule name="DynamicContent">
                  <conditions>
                    <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                  </conditions>
                  <action type="Rewrite" url="index.js"/>
                </rule>
              </rules>
            </rewrite>
            <iisnode watchedFiles="web.config;*.js"/>
          </system.webServer>
        </configuration>
        EOF

    - name: Clean previous deployment files
      run: |
        rm -f backend.zip

    - name: Zip backend
      run: |
        cd Backend
        zip -r ../backend.zip . -x "node_modules/*" ".env" "*.git*" ".env.*"

    - name: Deploy to Azure Web App via zipdeploy
      env:
        AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
      run: |
        if [ -z "$AZURE_WEBAPP_PUBLISH_PROFILE" ]; then
          echo "Missing AZURE_WEBAPP_PUBLISH_PROFILE secret" && exit 1
        fi
        USER=$(echo "$AZURE_WEBAPP_PUBLISH_PROFILE" | grep -oP 'userName=\K[^;]*')
        PASS=$(echo "$AZURE_WEBAPP_PUBLISH_PROFILE" | grep -oP 'userPWD=\K[^;]*')
        curl -X POST "https://sapitos.scm.azurewebsites.net/api/zipdeploy" \
          --user "$USER:$PASS" \
          --data-binary "@backend.zip" \
          --header "Content-Type: application/zip" \
          --max-time 600

    - name: Verify deployment
      run: |
        echo "Deployment completed. Please check your Azure Web App at: https://${{ secrets.AZURE_WEBAPP_BACKEND_NAME }}"